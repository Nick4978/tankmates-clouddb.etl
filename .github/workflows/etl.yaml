name: etl-run

on:
  workflow_dispatch:      # run it on demand

permissions:
  id-token: write
  contents: read

jobs:
  trigger:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Install Azure Container Apps CLI
        run: |
          az extension add --name containerapp --upgrade
          az extension add --name containerapp-compose --upgrade || true

      - name: Start ETL job
        run: |
          az containerapp job start \
            --name tm-etl-job \
            --resource-group teracorp-east-resource-group

      # Optional: wait for completion and dump latest logs
      - name: Wait for job execution and print status
        id: wait
        run: |
          # get latest execution id after a short wait
          sleep 15
          EXEC_ID=$(az containerapp job execution list \
            --name tm-etl-job \
            --resource-group teracorp-east-resource-group \
            --query "[0].name" -o tsv)
          echo "execution_id=$EXEC_ID" >> $GITHUB_OUTPUT

          # poll until Succeeded/Failed/Stopped (timeout ~15m)
          for i in {1..90}; do
            STATUS=$(az containerapp job execution show \
              --name tm-etl-job \
              --resource-group teracorp-east-resource-group \
              --job-execution-name "$EXEC_ID" \
              --query "properties.status" -o tsv)
            echo "Status: $STATUS"
            if [ "$STATUS" = "Succeeded" ] || [ "$STATUS" = "Failed" ] || [ "$STATUS" = "Stopped" ]; then
              break
            fi
            sleep 10
          done

      - name: Show container logs (best-effort)
        if: steps.wait.outputs.execution_id != ''
        run: |
          az containerapp job execution show \
            --name tm-etl-job \
            --resource-group teracorp-east-resource-group \
            --job-execution-name "${{ steps.wait.outputs.execution_id }}" -o jsonc